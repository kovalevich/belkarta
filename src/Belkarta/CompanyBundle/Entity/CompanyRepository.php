<?php

namespace Belkarta\CompanyBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CompanyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CompanyRepository extends EntityRepository
{
    public function getCompaniesWithParams($search, $limit = 10, $from = 1, $order = null)
    {
        $query = $this->createQueryBuilder('p')
            ->select('p')
            ->setFirstResult( $from )
            ->setMaxResults( $limit );

        if($order !== null)
            $query->orderBy('p.' . $order[0], $order[1]);

        if($search)
            $query->where($query->expr()->like('p.name', ':search'))
                ->setParameter('search', '%' . $search . '%');

        return $query->getQuery()->getResult();
    }

    public function getCount($type_id = null)
    {
        $query = $this->createQueryBuilder('p')
            ->select('COUNT(p.id)');

        if($type_id)
            $query->where('p.type_id = :type_id')
                ->setParameter('type_id', $type_id);

        return $query->getQuery()->getOneOrNullResult();
    }

    public function findAllByParams($type, $city)
    {
        $query = $this->createQueryBuilder('p')
            ->select('p')
            ->join('p.type', 't')
            ->orderBy('p.created', 'desc');

        if($city && $city !== 'all')
            $query->andWhere($query->expr()->like('p.cities', ':city'))
                ->setParameter('city', '%' . $city . '%');

        if($type && $type !== 'all')
            $query->andWhere('t.id = :type')
                ->setParameter('type', $type);

        return $query->getQuery()->getResult();
    }

}
